---
import Layout from "../../layouts/Layout.astro";

import { getCollection } from 'astro:content';
import { getRelativeLocaleUrl } from "astro:i18n";
import Header from "../../components/header.astro";

export async function getStaticPaths() {
  const pages = await getCollection('shop');

  const paths = pages.map(page => {
    const [lang, ...slug] = page.slug.split('/');
    return { params: { lang, slug: slug.join('/') || undefined }, props: page };
  });

  return paths;
}

const page = Astro.props;

const title = page.data.titleText;
const description = page.data.descriptionText;
---

<Layout
    title={title}
    description={description}
    lang={Astro.params.lang}
    headHtmls={[
      ...page.data.products.products.map(product => /* html */ `
        <script type="application/ld+json">
          {
            "@context": "https://schema.org",
            "@type": "Product",
            "name": "${product.nameText}",
            "image": "${product.image.url}",
            "description": "${product.descriptionText}",
            "sku": "${product.skuText}",
            "brand": {
              "@type": "Brand",
              "name": "Ziboulette"
            },
            "offers": {
              "@type": "Offer",
              "url": "${Astro.url}",
              "priceCurrency": "${product.priceText.includes('â‚¬') ? 'EUR' : 'USD'}",
              "price": "${product.priceText.replace(/[^0-9.,]/g, '').trim().replace(',', '.')}",
              "priceValidUntil": "${new Date().getFullYear() + 1}-01-01",
              "itemCondition": "${product.itemConditionEnumLink}",
              "availability": "${product.availabilityEnumLink}",
              "seller": {
                "@type": "Organization",
                "name": "Ziboulette"
              }
            }
          }
        </script>
      `),
      ...page.data.reviews.reviews.map(review => /* html */ `
        <script type="application/ld+json">
          {
            "@context": "https://schema.org",
            "@type": "Review",
            "itemReviewed": "${title}",
            "reviewRating": {
              "@type": "Rating",
              "ratingValue": "${review.rating}",
              "bestRating": "5",
              "worstRating": "1"
            },
            "author": {
              "@type": "Person",
              "name": "${review.authorText}"
            },
            "reviewBody": "${review.contentText}",
            "publisher": {
              "@type": "Organization",
              "name": "Ziboulette"
            }
          }
        </script>
      `)
    ]}
>
    <Header lang={Astro.params.lang} />

	<main class="w-full flex justify-center">
        <div class="w-full max-w-7xl px-4">
            <header>
                <h1 class="text-3xl font-bold mb-4">{page.data.titleText}</h1>
                <p class="text-lg text-gray-600 mb-8">{page.data.descriptionText}</p>
            </header>

            <section id="produits" class="products">
                <h2 class="text-xl font-medium mb-4">{page.data.products.titleText}</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    {page.data.products.products.map(product => (
                        <div class="bg-white rounded-xl shadow-md p-8">
                            <img src={product.image.url} alt={product.nameText} class="w-full h-48 object-cover object-center mb-4 rounded-lg" />
                            <h2 class="text-xl font-bold mb-2">{product.nameText}</h2>
                            <p class="text-gray-600 mb-4">{product.descriptionText}</p>
                            <p class="text-lg font-bold">{product.priceText}</p>
                            <a href={product.link} class="block mt-4 text-center text-white bg-gradient-to-br from-darkLuminescentGreen to-neonBlue font-bold py-2 rounded-lg hover:bg-gradient-to-tl">
                                {product.buttonText}
                            </a>
                        </div>
                    ))}
                </div>
            </section>

            <section id="avis" class="reviews mt-8">
                <h2 class="text-xl font-medium mb-4">{page.data.reviews.titleText}</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    {page.data.reviews.reviews.map(review => (
                        <div class="bg-white rounded-xl shadow-md p-8">
                            <p class="text-lg font-bold mb-2">{review.authorText}</p>
                            <p class="text-gray-600 mb-4">{review.contentText}</p>
                            <p class="text-lg font-bold">{review.rating}/5
                                <span class="icon-[ic--baseline-star] text-yellow-400" />
                            </p>
                        </div>
                    ))}
                </div>
            </section>
        </div>
	</main>
</Layout>
